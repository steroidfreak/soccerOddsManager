"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SportMonksFootball = void 0;
const client_1 = require("./client");
class SportMonksFootball extends client_1.HttpClient {
    constructor(conf) {
        super(`${client_1.API_BASE_URL}`, conf.apiToken, conf.timezone);
        this.conf = conf;
    }
    get(path, opts) {
        return super.get(`/v3/football${path}`, opts);
    }
    // Leagues
    leagues(opts) {
        return this.get(`/leagues`, opts);
    }
    leaguesLive(opts) {
        return this.get(`/leagues/live`, opts);
    }
    leaguesById(id, opts) {
        return this.get(`/leagues/${id}`, opts);
    }
    leaguesByTeamId(id, opts) {
        return this.get(`/teams/${id}/leagues`, opts);
    }
    leaguesByTeamIdCurrent(id, opts) {
        return this.get(`/teams/${id}/leagues/current`, opts);
    }
    shirtsByLeagueId(id, opts) {
        return this.get(`/leagues/${id}/jerseys`, opts);
    }
    enrichmentsByLeagueId(id, opts) {
        return this.get(`/leagues/${id}/includes`, opts);
    }
    leaguesByDate(date, opts) {
        return this.get(`/leagues/date/${date}`, opts);
    }
    leaguesByCountryId(countryId, opts) {
        return this.get(`/leagues/countries/${countryId}`, opts);
    }
    leaguesSearchByName(name, opts) {
        return this.get(`/leagues/search/${name}`, opts);
    }
    // Fixtures
    fixtures(opts) {
        return this.get(`/fixtures`, opts);
    }
    fixturesLastUpdated(opts) {
        return this.get(`/fixtures/latest`, opts);
    }
    fixturesById(id, opts) {
        return this.get(`/fixtures/${id}`, opts);
    }
    fixturesByIds(ids, opts) {
        return this.get(`/fixtures/multi/${ids.join(',')}`, opts);
    }
    fixturesSearchByName(name, opts) {
        return this.get(`/fixtures/search/${name}`, opts);
    }
    fixturesByDate(date, opts) {
        return this.get(`/fixtures/date/${date}`, opts);
    }
    fixturesByDateRange(dateStart, dateEnd, opts) {
        return this.get(`/fixtures/between/${dateStart}/${dateEnd}`, opts);
    }
    fixturesByDateRangeForTeam(dateStart, dateEnd, teamId, opts) {
        return this.get(`/fixtures/between/${dateStart}/${dateEnd}/${teamId}`, opts);
    }
    fixturesHeadToHead(firstTeamId, secondTeamId, opts) {
        return this.get(`/fixtures/head-to-head/${firstTeamId}/${secondTeamId}`, opts);
    }
    fixturesUpcomingByMarketId(id, opts) {
        return this.get(`/fixtures/upcoming/markets/${id}`, opts);
    }
    // livescores
    livescores(opts) {
        return this.get(`/livescores`, opts);
    }
    livescoresLatest(opts) {
        return this.get(`/livescores/latest`, opts);
    }
    livescoresInPlay(opts) {
        return this.get(`/livescores/inplay`, opts);
    }
    // teams
    teams(opts) {
        return this.get(`/teams`, opts);
    }
    teamsByCountryId(id, opts) {
        return this.get(`/teams/countries/${id}`, opts);
    }
    teamsBySeasonId(id, opts) {
        return this.get(`/teams/seasons/${id}`, opts);
    }
    teamsSearchByName(name, opts) {
        return this.get(`/teams/search/${name}`, opts);
    }
    teamsById(id, opts) {
        return this.get(`/teams/${id}`, opts);
    }
    // standings
    standings(opts) {
        return this.get(`/standings`, opts);
    }
    standingsBySeasonId(id, opts) {
        return this.get(`/standings/seasons/${id}`, opts);
    }
    standingsByRoundId(id, opts) {
        return this.get(`/standings/rounds/${id}`, opts);
    }
    standingsCorrectionBySeasonId(id, opts) {
        return this.get(`/standings/corrections/seasons/${id}`, opts);
    }
    standingsByLeagueIdLive(id, opts) {
        return this.get(`/standings/live/leagues/${id}`, opts);
    }
    // schedules
    schedulesBySeasonId(id, opts) {
        return this.get(`/schedules/seasons/${id}`, opts);
    }
    schedulesByTeamId(id, opts) {
        return this.get(`/schedules/teams/${id}`, opts);
    }
    schedulesBySeasonIdAndTeamId(seasonId, teamId, opts) {
        return this.get(`/schedules/seasons/${seasonId}/teams/${teamId}`, opts);
    }
    // players
    players(opts) {
        return this.get(`/players`, opts);
    }
    playersLatestUpdated(opts) {
        return this.get(`/players/latest`, opts);
    }
    playersById(id, opts) {
        return this.get(`/players/${id}`, opts);
    }
    playersByCountryId(id, opts) {
        return this.get(`/players/countries/${id}`, opts);
    }
    playersSearchByName(name, opts) {
        return this.get(`/players/search/${name}`, opts);
    }
    // news
    newsPreMatch(opts) {
        return this.get(`/news/pre-match`, opts);
    }
    newsPreMatchBySeasonId(id, opts) {
        return this.get(`/news/pre-match/seasons/${id}`, opts);
    }
    newsUpcomingPreMatch(opts) {
        return this.get(`/news/pre-match/upcoming`, opts);
    }
    newsPostMatch(opts) {
        return this.get(`/news/post-match`, opts);
    }
    newsPostMatchBySeasonId(id, opts) {
        return this.get(`/news/post-match/seasons/${id}`, opts);
    }
    newsUpcomingPostMatch(opts) {
        return this.get(`/news/post-match/upcoming`, opts);
    }
    // venues
    venues(opts) {
        return this.get(`/venues`, opts);
    }
    venuesById(id, opts) {
        return this.get(`/venues/${id}`, opts);
    }
    venuesSearchByName(name, opts) {
        return this.get(`/venues/search/${name}`, opts);
    }
    venuesBySeasonId(id, opts) {
        return this.get(`/venues/seasons/${id}`, opts);
    }
    // seasons
    seasons(opts) {
        return this.get(`/seasons`, opts);
    }
    seasonsById(id, opts) {
        return this.get(`/seasons/${id}`, opts);
    }
    seasonsSearchByName(name, opts) {
        return this.get(`/seasons/search/${name}`, opts);
    }
    seasonsByTeamId(id, opts) {
        return this.get(`/seasons/teams/${id}`, opts);
    }
    // squads
    squadsByTeamId(id, opts) {
        return this.get(`/squads/teams/${id}`, opts);
    }
    squadsBySeasonIdAndByTeamId(seasonId, teamId, opts) {
        return this.get(`/squads/seasons/${seasonId}/teams/${teamId}`, opts);
    }
    // tv-stations
    tvStations(opts) {
        return this.get(`/tv-stations`, opts);
    }
    tvStationsById(id, opts) {
        return this.get(`/tv-stations/${id}`, opts);
    }
    tvStationsByFixtureId(id, opts) {
        return this.get(`/tv-stations/fixtures/${id}`, opts);
    }
    // coaches
    coaches(opts) {
        return this.get(`/coaches`, opts);
    }
    coachesLatestUpdated(opts) {
        return this.get(`/coaches/latest`, opts);
    }
    coachesById(id, opts) {
        return this.get(`/coaches/${id}`, opts);
    }
    coachesByCountryId(id, opts) {
        return this.get(`/coaches/countries/${id}`, opts);
    }
    coachesSearchByName(name, opts) {
        return this.get(`/coaches/search/${name}`, opts);
    }
    // topscorers
    topscorersByStageId(id, opts) {
        return this.get(`/topscorers/stages/${id}`, opts);
    }
    topscorersBySeasonId(id, opts) {
        return this.get(`/topscorers/seasons/${id}`, opts);
    }
    // rounds
    rounds(opts) {
        return this.get(`/rounds`, opts);
    }
    roundsById(id, opts) {
        return this.get(`/rounds/${id}`, opts);
    }
    roundsSearchByName(name, opts) {
        return this.get(`/rounds/search/${name}`, opts);
    }
    roundsBySeasonId(id, opts) {
        return this.get(`/rounds/seasons/${id}`, opts);
    }
    // stages
    stages(opts) {
        return this.get(`/stages`, opts);
    }
    stagesById(id, opts) {
        return this.get(`/stages/${id}`, opts);
    }
    stagesSearchByName(name, opts) {
        return this.get(`/stages/search/${name}`, opts);
    }
    stagesBySeasonId(id, opts) {
        return this.get(`/stages/seasons/${id}`, opts);
    }
    // rivals
    rivals(opts) {
        return this.get(`/rivals`, opts);
    }
    rivalsByTeamId(id, opts) {
        return this.get(`/rivals/teams/${id}`, opts);
    }
    // commentaries
    commentaries(opts) {
        return this.get(`/commentaries`, opts);
    }
    commentariesByFixtureId(id, opts) {
        return this.get(`/commentaries/fixtures/${id}`, opts);
    }
    // referees
    referees(opts) {
        return this.get(`/referees`, opts);
    }
    refereesById(id, opts) {
        return this.get(`/referees/${id}`, opts);
    }
    refereesSearchByName(name, opts) {
        return this.get(`/referees/search/${name}`, opts);
    }
    refereesBySeasonId(id, opts) {
        return this.get(`/referees/seasons/${id}`, opts);
    }
    refereesByCountryId(id, opts) {
        return this.get(`/referees/countries/${id}`, opts);
    }
    // transfers
    transfers(opts) {
        return this.get(`/transfers`, opts);
    }
    transfersLastUpdated(opts) {
        return this.get(`/transfers/latest`, opts);
    }
    transfersById(id, opts) {
        return this.get(`/transfers/${id}`, opts);
    }
    transfersByDateRange(dateStart, dateEnd, opts) {
        return this.get(`/transfers/between/${dateStart}/${dateEnd}`, opts);
    }
    transfersByTeamId(id, opts) {
        return this.get(`/transfers/teams/${id}`, opts);
    }
    transfersByPlayerId(id, opts) {
        return this.get(`/transfers/players/${id}`, opts);
    }
    // states
    states(opts) {
        return this.get(`/states`, opts);
    }
    statesById(id, opts) {
        return this.get(`/states/${id}`, opts);
    }
    // predictions
    predictions(opts) {
        return this.get(`/predictions/probabilities`, opts);
    }
    predictionsByFixtureId(id, opts) {
        return this.get(`/predictions/probabilities/fixtures/${id}`, opts);
    }
    predictionsValueBets(opts) {
        return this.get(`/predictions/value-bets`, opts);
    }
    predictionsValueBetsByFixtureId(id, opts) {
        return this.get(`/predictions/value-bets/fixtures/${id}`, opts);
    }
    // odds
    oddsPreMatch(opts) {
        return this.get(`/odds/pre-match`, opts);
    }
    oddsPreMatchLastUpdated(opts) {
        return this.get(`/odds/pre-match/latest`, opts);
    }
    oddsPreMatchByFixtureId(id, opts) {
        return this.get(`/odds/pre-match/fixtures/${id}`, opts);
    }
    oddsPreMatchByFixtureIdAndBookmakerId(fixtureId, bookmakerId, opts) {
        return this.get(`/odds/pre-match/fixtures/${fixtureId}/bookmakers/${bookmakerId}`, opts);
    }
    oddsPreMatchByFixtureIdAndMarketId(fixtureId, marketId, opts) {
        return this.get(`/odds/pre-match/fixtures/${fixtureId}/markets/${marketId}`, opts);
    }
    oddsInPlay(opts) {
        return this.get(`/odds/inplay`, opts);
    }
    oddsInPlayLatest(opts) {
        return this.get(`/odds/inplay/latest`, opts);
    }
    oddsInPlayByFixtureId(id, opts) {
        return this.get(`/odds/inplay/fixtures/${id}`, opts);
    }
    oddsInPlayByFixtureIdAndBookmakerId(fixtureId, bookmakerId, opts) {
        return this.get(`/odds/inplay/fixtures/${fixtureId}/bookmakers/${bookmakerId}`, opts);
    }
    oddsInPlayByFixtureIdAndMarketId(fixtureId, marketId, opts) {
        return this.get(`/odds/inplay/fixtures/${fixtureId}/markets/${marketId}`, opts);
    }
}
exports.SportMonksFootball = SportMonksFootball;
//# sourceMappingURL=football.js.map