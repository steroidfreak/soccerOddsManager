import { HttpClient, SportMonksConf, GET_OPTS, IApiResponse } from "./client";
export declare class SportMonksFootball extends HttpClient {
    private conf;
    constructor(conf: SportMonksConf);
    get(path: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    leagues(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    leaguesLive(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    leaguesById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    leaguesByTeamId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    leaguesByTeamIdCurrent(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    shirtsByLeagueId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    enrichmentsByLeagueId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    leaguesByDate(date: Date, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    leaguesByCountryId(countryId: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    leaguesSearchByName(name: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    fixtures(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    fixturesLastUpdated(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    fixturesById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    fixturesByIds(ids: number[], opts?: GET_OPTS): Promise<IApiResponse<any>>;
    fixturesSearchByName(name: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    fixturesByDate(date: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    fixturesByDateRange(dateStart: string, dateEnd: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    fixturesByDateRangeForTeam(dateStart: string, dateEnd: string, teamId: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    fixturesHeadToHead(firstTeamId: number, secondTeamId: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    fixturesUpcomingByMarketId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    livescores(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    livescoresLatest(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    livescoresInPlay(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    teams(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    teamsByCountryId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    teamsBySeasonId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    teamsSearchByName(name: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    teamsById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    standings(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    standingsBySeasonId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    standingsByRoundId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    standingsCorrectionBySeasonId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    standingsByLeagueIdLive(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    schedulesBySeasonId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    schedulesByTeamId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    schedulesBySeasonIdAndTeamId(seasonId: number, teamId: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    players(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    playersLatestUpdated(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    playersById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    playersByCountryId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    playersSearchByName(name: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    newsPreMatch(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    newsPreMatchBySeasonId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    newsUpcomingPreMatch(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    newsPostMatch(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    newsPostMatchBySeasonId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    newsUpcomingPostMatch(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    venues(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    venuesById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    venuesSearchByName(name: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    venuesBySeasonId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    seasons(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    seasonsById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    seasonsSearchByName(name: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    seasonsByTeamId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    squadsByTeamId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    squadsBySeasonIdAndByTeamId(seasonId: number, teamId: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    tvStations(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    tvStationsById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    tvStationsByFixtureId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    coaches(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    coachesLatestUpdated(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    coachesById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    coachesByCountryId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    coachesSearchByName(name: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    topscorersByStageId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    topscorersBySeasonId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    rounds(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    roundsById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    roundsSearchByName(name: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    roundsBySeasonId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    stages(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    stagesById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    stagesSearchByName(name: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    stagesBySeasonId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    rivals(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    rivalsByTeamId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    commentaries(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    commentariesByFixtureId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    referees(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    refereesById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    refereesSearchByName(name: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    refereesBySeasonId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    refereesByCountryId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    transfers(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    transfersLastUpdated(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    transfersById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    transfersByDateRange(dateStart: string, dateEnd: string, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    transfersByTeamId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    transfersByPlayerId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    states(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    statesById(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    predictions(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    predictionsByFixtureId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    predictionsValueBets(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    predictionsValueBetsByFixtureId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    oddsPreMatch(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    oddsPreMatchLastUpdated(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    oddsPreMatchByFixtureId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    oddsPreMatchByFixtureIdAndBookmakerId(fixtureId: number, bookmakerId: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    oddsPreMatchByFixtureIdAndMarketId(fixtureId: number, marketId: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    oddsInPlay(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    oddsInPlayLatest(opts?: GET_OPTS): Promise<IApiResponse<any>>;
    oddsInPlayByFixtureId(id: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    oddsInPlayByFixtureIdAndBookmakerId(fixtureId: number, bookmakerId: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
    oddsInPlayByFixtureIdAndMarketId(fixtureId: number, marketId: number, opts?: GET_OPTS): Promise<IApiResponse<any>>;
}
